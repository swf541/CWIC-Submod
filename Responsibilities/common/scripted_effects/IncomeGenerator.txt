income_effect = {
	set_variable = { grossdomesticproduct_influence_limit = grossdomesticproduct }
	multiply_variable = { grossdomesticproduct_influence_limit = 2 }
	
	corruption_idea_calc = yes
	miitary_expenditure = yes
	welfare_expenditure = yes
	cpi_expenditure = yes
	edu_expenditure = yes
	health_expenditure = yes
	public_expenditure = yes
	tax_rate = yes
	edict_expenditure = yes
	
	set_variable = { CorruptPolicyExcess = CorruptionLevel }
	multiply_variable = { CorruptPolicyExcess = 0.2 }
	
	every_owned_state = {
		add_to_variable = { ROOT.industrial_complex_total = building_level@industrial_complex }  
		add_to_variable = { ROOT.farm_total = building_level@agri_industrial_complex }
		add_to_variable = { ROOT.dockyard_total = building_level@dockyard }
		add_to_variable = { ROOT.oil_refinery_total = building_level@synthetic_refinery }
		add_to_variable = { ROOT.steel_works_total = building_level@steel_factory }
		add_to_variable = { ROOT.tungsten_factory_total = building_level@tungsten_factory }
		
		add_to_variable = { ROOT.office_park_total = building_level@office_park }	#+2
	}
	
	#industrial_complex Modifiers
	multiply_variable = { industrial_complex_total = 0.9 } #DIVIDER
	set_variable = { industrial_complex_tech = 1 }
	if = {
		limit = {
			has_tech = production_efficiency_I
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_II
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_III
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_IV
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_V
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_VI
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_VII
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_VIII
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_IX
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_X
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	industrial_robots_I
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	industrial_robots_II
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	industrial_robots_III
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	industrial_robots_IV
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	industrial_robots_V
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	factory_automation_I
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	factory_automation_II
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	multiply_variable = { industrial_complex_total = industrial_complex_tech }
	add_to_variable = { IncomeTotal = industrial_complex_total }
	set_variable = { IND_DISPLAY = industrial_complex_total }
	#agri_industrial_complex
	multiply_variable = { farm_total = 0.9 } #DIVIDER
	set_variable = { farm_tech = 1 }
	if = {
		limit = {
			has_tech = 	agriculture_I
		}
		add_to_variable = { farm_tech = 0.15 }
	}

	if = {
		limit = {
			has_tech = 	agriculture_I
		}
		add_to_variable = { farm_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	agriculture_II
		}
		add_to_variable = { farm_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	agriculture_III
		}
		add_to_variable = { farm_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	agriculture_IV
		}
		add_to_variable = { farm_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	agriculture_V
		}
		add_to_variable = { farm_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	agriculture_VI
		}
		add_to_variable = { farm_tech = 0.15 }
	}
	multiply_variable = { farm_total = farm_tech }
	add_to_variable = { IncomeTotal = farm_total }
	set_variable = { FARM_DISPLAY = farm_total }
	#dockyard
	multiply_variable = { dockyard_total = 0.9 } #DIVIDER
	set_variable = { dockyard_tech = 1 }
	if = {
		limit = {
			has_tech = 	logistics_I
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_II
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_III
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_IV_A
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_IV_B
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_XII
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_V_A
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_V_B
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_VI
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_VII_A
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_VII_B
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_VIII_A
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_VIII_B
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_IX
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_X
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_XII
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	multiply_variable = { dockyard_total = dockyard_tech }
	add_to_variable = { IncomeTotal = dockyard_total }
	set_variable = { DOCK_TOTAL = dockyard_total }
	#synthetic_refinery +15%
	multiply_variable = { oil_refinery_total = 1.8 } #DIVIDER
	set_variable = { oil_refinery_tech = 1 }
	if = {
		limit = {
			has_tech = 	ww_oil
		}
		add_to_variable = { oil_refinery_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	plastics_I
		}
		add_to_variable = { oil_refinery_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	plastics_II
		}
		add_to_variable = { oil_refinery_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	plastics_III
		}
		add_to_variable = { oil_refinery_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	plastics_IV
		}
		add_to_variable = { oil_refinery_tech = 0.15 }
	}	
	if = {
		limit = {
			has_tech = 	plastics_V
		}
		add_to_variable = { oil_refinery_tech = 0.15 }
	}
	multiply_variable = { oil_refinery_total = oil_refinery_tech }
	add_to_variable = { IncomeTotal = oil_refinery_total }
	
	#steel_factory +15%			steel_works_total
	multiply_variable = { steel_works_total = 1.8 } #DIVIDER
	set_variable = { steel_works_tech = 1 }
	if = {
		limit = {
			has_tech = 	materials_I
		}
		add_to_variable = { steel_works_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	materials_II
		}
		add_to_variable = { steel_works_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	materials_III
		}
		add_to_variable = { steel_works_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	materials_IV
		}
		add_to_variable = { steel_works_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	materials_V
		}
		add_to_variable = { steel_works_tech = 0.15 }
	}	
	if = {
		limit = {
			has_tech = 	materials_VI
		}
		add_to_variable = { steel_works_tech = 0.15 }
	}
	multiply_variable = { steel_works_total = steel_works_tech }
	add_to_variable = { IncomeTotal = steel_works_total }

	#tungsten_factory +15%		tungsten_factory_total
	multiply_variable = { tungsten_factory_total = 1.8 } #DIVIDER
	set_variable = { tungsten_factory_tech = 1 }
	if = {
		limit = {
			has_tech = 	chemistry_I
		}
		add_to_variable = { tungsten_factory_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	chemistry_II
		}
		add_to_variable = { tungsten_factory_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	chemistry_III
		}
		add_to_variable = { tungsten_factory_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	chemistry_IV
		}
		add_to_variable = { tungsten_factory_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	chemistry_V
		}
		add_to_variable = { tungsten_factory_tech = 0.15 }
	}	
	if = {
		limit = {
			has_tech = 	chemistry_VI
		}
		add_to_variable = { tungsten_factory_tech = 0.15 }
	}
	multiply_variable = { tungsten_factory_total = tungsten_factory_tech }
	add_to_variable = { IncomeTotal = tungsten_factory_total }

	#office_park x2 +15%		office_park_total
	multiply_variable = { office_park_total = 3 }
	multiply_variable = { office_park_total = 0.9 } #DIVIDER
	set_variable = { office_park_tech = 1 }
	if = {
		limit = {
			has_tech = 	consumer_electronics_I
		}
		add_to_variable = { office_park_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	consumer_electronics_II
		}
		add_to_variable = { office_park_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	consumer_electronics_III
		}
		add_to_variable = { office_park_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	consumer_electronics_IV
		}
		add_to_variable = { office_park_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	consumer_electronics_V
		}
		add_to_variable = { office_park_tech = 0.15 }
	}	
	if = {
		limit = {
			has_tech = 	consumer_electronics_VI
		}
		add_to_variable = { office_park_tech = 0.15 }
	}
	multiply_variable = { office_park_total = office_park_tech }
	add_to_variable = { IncomeTotal = office_park_total }
	set_variable { OP_Display = office_park_total }
	
	set_variable = { resource_income = 0 }
	set_variable = { oil_exports = resource_exported@oil } 
	multiply_variable = { oil_exports = 0.01 }
	set_variable = { aluminium_exports = resource_exported@aluminium } 
	multiply_variable = { aluminium_exports = 0.005 }
	set_variable = { rubber_exports = resource_exported@rubber } 
	multiply_variable = { rubber_exports = 0.008 }
	set_variable = { tungsten_exports = resource_exported@tungsten } 
	multiply_variable = { tungsten_exports = 0.012 }
	set_variable = { steel_exports = resource_exported@steel } 
	multiply_variable = { steel_exports = 0.005 }
	set_variable = { chromium_exports = resource_exported@chromium } 
	multiply_variable = { chromium_exports = 0.025 }
	
	add_to_variable = { resource_income = oil_exports }
	add_to_variable = { resource_income = aluminium_exports }
	add_to_variable = { resource_income = rubber_exports }
	add_to_variable = { resource_income = tungsten_exports }
	add_to_variable = { resource_income = steel_exports }
	add_to_variable = { resource_income = chromium_exports }
	
	add_to_variable = { IncomeTotal = tax_base }
	if = {
		limit = {
			has_idea = 	Austrian_Taxation
		}
		multiply_variable = { IncomeTotal = 1 }
	}
	
	add_to_variable = { IncomeTotal = resource_income }
	
	set_variable = { display_income = IncomeTotal }
	
	set_variable = { CorruptIncomeLoss = CorruptionLevel }
	multiply_variable = { CorruptIncomeLoss = 0.5 }
	
	set_variable = { CorruptLoss = IncomeTotal }
	multiply_variable = { CorruptLoss = CorruptIncomeLoss }
	
	subtract_from_variable = { IncomeTotal = CorruptLoss }
	
	set_variable = { resource_cost = 0 }
	set_variable = { oil_imports = resource_imported@oil } 
	multiply_variable = { oil_imports = 0.02 }
	set_variable = { aluminium_imports = resource_imported@aluminium } 
	multiply_variable = { aluminium_imports = 0.01 }
	set_variable = { rubber_imports = resource_imported@rubber } 
	multiply_variable = { rubber_imports = 0.015 }
	set_variable = { tungsten_imports = resource_imported@tungsten } 
	multiply_variable = { tungsten_imports = 0.025 }
	set_variable = { steel_imports = resource_imported@steel } 
	multiply_variable = { steel_imports = 0.01 }
	set_variable = { chromium_imports = resource_imported@chromium } 
	multiply_variable = { chromium_imports = 0.05 }
	add_to_variable = { resource_cost = oil_imports }
	add_to_variable = { resource_cost = aluminium_imports }
	add_to_variable = { resource_cost = rubber_imports }
	add_to_variable = { resource_cost = tungsten_imports }
	add_to_variable = { resource_cost = steel_imports }
	add_to_variable = { resource_cost = chromium_imports }	
	
	subtract_from_variable = { IncomeTotal = resource_cost }
	
	#Insurgency Costs
	subtract_from_variable = { IncomeTotal = paigc_funding }
	subtract_from_variable = { IncomeTotal = los_funding }
	subtract_from_variable = { IncomeTotal = vie_funding }
	subtract_from_variable = { IncomeTotal = vin_funding }
	
	#Policy Costs
	subtract_from_variable = { IncomeTotal = mil_expend }
	subtract_from_variable = { IncomeTotal = welfare_cost }
	subtract_from_variable = { IncomeTotal = cpi_cost }
	subtract_from_variable = { IncomeTotal = edu_cost }	
	subtract_from_variable = { IncomeTotal = health_cost }	
	subtract_from_variable = { IncomeTotal = pub_cost }	
	
	set_variable = { SubsidiyCheck = IncomeTotal }
	multiply_variable = { SubsidiyCheck = 0.25 }
	
	add_to_variable = { currentMoney = IncomeTotal }
	set_variable = { IncomeCheck = IncomeTotal }
	set_variable = { IncomePlannerCheck = IncomeCheck }
	
	set_variable = { currentDebtPayments = 0 }
	for_each_loop = {
	  array = debtPaymentArray
	  index = i
		 if = {
			limit = {
				check_variable = { debtTotalsArray^i > 0 }
			}
			  subtract_from_variable = { debtTotalsArray^i = debtPaymentArray^i } 
			  subtract_from_variable = { currentMoney = debtPaymentArray^i }
			  subtract_from_variable = { currentDebt = debtPaymentArray^i }
			  add_to_variable = { currentDebtPayments = debtPaymentArray^i }
			}

		  if = {
			limit = {
				NOT = {
					check_variable = {
						debtOwnerArray^i = THIS.ID
					}
				}
				NOT = {
					check_variable = {
						debtOwnerArray^i = GER.ID
					}
				}
			}
			 var:debtOwnerArray^i = {
				add_to_variable = {
					currentMoney = debtPaymentArray^i
				}
			}
		  }
		  if = {
			limit = {
				check_variable = {
					debtOwnerArray^i = GER.ID
				}
			}
			 var:debtOwnerArray^i = {
				add_to_variable = {
					currentMoney = debtPaymentArray^i
				}
				set_temp_variable = { temp_debt_pay = debtPaymentArray^i }
				for_loop_effect = {
					end = influence_array^num
					value = v
					if = {
						limit = {
							check_variable = { influence_array^v = GER }
						}
						subtract_from_variable = { influence_array_val^v = temp_debt_pay }
					}
				}
			}
		  }
		  if = {
			limit = {
				check_variable = {
					debtOwnerArray^i = THIS.ID
				}
			}
			subtract_from_variable = { domesticTotalDebt = debtPaymentArray^i } 
		  }
		 if = {
			limit = {
				OR = {
					check_variable = { debtTotalsArray^i = 0 }
					check_variable = { debtTotalsArray^i < 0 }			
				}
			}
			set_variable = { debtTotalsArray^i = 0 }
			set_variable = { debtPaymentArray^i = 0 }
			set_variable = { debtOwnerArray = 0 }
		}
	}

	set_variable = { domesticTotalDebtK = domesticTotalDebt }
	divide_variable = { domesticTotalDebtK = 1000 }
	set_variable = { gdpDomesticDebtLimit = 0.40 }
	if = {
		limit = { 
			check_variable = {
				grossdomesticproduct > 1
			}
		}
		add_to_variable = {
			gdpDomesticDebtLimit = 0.10
		}
	}
	if = {
		limit = { 
			check_variable = {
				grossdomesticproduct > 5
			}
		}
		add_to_variable = {
			gdpDomesticDebtLimit = 0.10
		}
	}
	if = {
		limit = { 
			check_variable = {
				grossdomesticproduct > 10
			}
		}
		add_to_variable = {
			gdpDomesticDebtLimit = 0.10
		}
	}
	if = {
		limit = { 
			check_variable = {
				grossdomesticproduct > 100
			}
		}
		add_to_variable = {
			gdpDomesticDebtLimit = 0.10
		}
	}
	if = {
		limit = { 
			check_variable = {
				grossdomesticproduct > 1000
			}
		}
		add_to_variable = {
			gdpDomesticDebtLimit = 0.10
		}
	}
	if = {
		limit = {
			check_variable = { currentMoney < 0 }
		}	
		if = {
			limit = {
				OR = {
					check_variable = { domesticTotalDebtK < gdpDomesticDebtLimit }
					check_variable = { domesticTotalDebtK = gdpDomesticDebtLimit }
				}
			}
			set_variable = {
				pulse_deficit = currentMoney
			}
			multiply_variable = {
				pulse_deficit = -1
			}
			add_to_variable = { 
				currentMoney = pulse_deficit 
			}

			multiply_variable = {	#Interest
				pulse_deficit = 1.05
			}
			add_to_array = {
				array = debtOwnerArray
				value = THIS.id
			}
			add_to_array = {
				array = debtTotalsArray
				value = pulse_deficit
			}

			add_to_variable = { 
				currentDebt = pulse_deficit
			}
			add_to_variable = { 
				domesticTotalDebt = pulse_deficit
			}
			divide_variable = {
				pulse_deficit = 120
			}
			add_to_variable = { 
				debtPayment = pulse_deficit
			}		
			add_to_array = {
				array = debtPaymentArray
				value = debtPayment
			}
			add_to_array = {
				array = debtPaymentArray
				value = debtPayment
			}
			add_to_variable = { currentDebtPayments = debtPayment }
		}
		if = {
			limit = {
				check_variable = { domesticTotalDebtK > gdpDomesticDebtLimit }
			}
			set_variable = {
				pulse_deficit = currentMoney
			}
			multiply_variable = {
				pulse_deficit = -1
			}
			add_to_variable = { 
				currentMoney = pulse_deficit 
			}

			multiply_variable = {	#Interest
				pulse_deficit = 1.025
			}
			add_to_array = {
				array = debtOwnerArray
				value = GER.id
			}
			add_to_array = {
				array = debtTotalsArray
				value = pulse_deficit
			}

			for_loop_effect = {
				end = influence_array^num
				value = v
				if = {
					limit = {
						check_variable = { influence_array^v = GER }
					}
					add_to_variable = { influence_array_val^v = pulse_deficit }
					set_country_flag = found
				}
			}
			if = {
				limit = { NOT = { has_country_flag = found } }
					add_to_array = { influence_array = GER.id }
					add_to_array = { influence_array_val = pulse_deficit }
			}
			clr_country_flag = found
			recalculate_influence = yes	
				
			
			add_to_variable = { 
				currentDebt = pulse_deficit
			}
			divide_variable = {
				pulse_deficit = 36
			}
			add_to_variable = { 
				debtPayment = pulse_deficit
			}		
			add_to_array = {
				array = debtPaymentArray
				value = debtPayment
			}
			add_to_array = {
				array = debtPaymentArray
				value = debtPayment
			}
			
			add_to_variable = { currentDebtPayments = debtPayment }
		}

	}
	set_variable = {
		austerityCheck = grossdomesticproduct
	}
	multiply_variable = {
		austerityCheck = 0.55
	}
	set_variable = {
		defaultCheck = grossdomesticproduct
	}
	multiply_variable = {
		defaultCheck = 1.25
	}
	
	set_variable = { refinery_total = 0 }
	
	add_to_variable = { refinery_total = tungsten_factory_total }
	add_to_variable = { refinery_total = steel_works_total }
	add_to_variable = { refinery_total = oil_refinery_total }


	
	set_variable = { IncomeTotal = 0 }
	set_variable = { ROOT.industrial_complex_total = 0 }  
	set_variable = { ROOT.farm_total = 0 }
	set_variable = { ROOT.dockyard_total = 0 }
	set_variable = { ROOT.oil_refinery_total = 0 }
	set_variable = { ROOT.steel_works_total = 0 }
	set_variable = { ROOT.tungsten_factory_total = 0 }
	set_variable = { ROOT.office_park_total = 0 }
	}

miitary_expenditure = {
	add_to_variable = { IncomeCheck = mil_expend }
	set_variable = { battalion_tier_1 = num_battalions_with_type@direct_fire_gun }
	add_to_variable = { battalion_tier_1 = num_battalions_with_type@militia }
	add_to_variable = { battalion_tier_1 = num_battalions_with_type@signal_company }

	multiply_variable = { battalion_tier_1 = 0.01 }

	set_variable = { battalion_tier_2 = num_battalions_with_type@infantry }
	add_to_variable = { battalion_tier_2 = num_battalions_with_type@auto_cannon }
	add_to_variable = { battalion_tier_2 = num_battalions_with_type@light_artillery }
	add_to_variable = { battalion_tier_2 = num_battalions_with_type@light_sp_artillery }
	add_to_variable = { battalion_tier_2 = num_battalions_with_type@mountaineers }
	add_to_variable = { battalion_tier_2 = num_battalions_with_type@cavalry }
	add_to_variable = { battalion_tier_2 = num_battalions_with_type@motorized_infantry }
	add_to_variable = { battalion_tier_2 = num_battalions_with_type@recon }
	add_to_variable = { battalion_tier_2 = num_battalions_with_type@logistics_company }
	add_to_variable = { battalion_tier_2 = num_battalions_with_type@light_artillery_support }

	multiply_variable = { battalion_tier_2 = 0.05 }

	set_variable = { battalion_tier_3 = num_battalions_with_type@spaag }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@atgm }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@artillery }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@sp_artillery }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@heavy_artillery }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@light_armor }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@marine }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@airborne }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@ff1 }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@mechanized_infantry }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@recon_mechanized }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@artillery_support }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@heavy_artillery_support }
	add_to_variable = { battalion_tier_3 = num_battalions_with_type@military_police }

	multiply_variable = { battalion_tier_3 = 0.075 }

	set_variable = { battalion_tier_4 = num_battalions_with_type@sam_carrier }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@atgm_carrier }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@heavy_sp_artillery }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@medium_armor }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@mechanized_marine }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@mechanized_airborne }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@armored_infantry }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@air_cavalry }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@engineer }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@recon_helicopter }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@maintenance_company }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@field_hospital }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@army_special_force }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@navy_special_force }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@airforce_special_force }
	add_to_variable = { battalion_tier_4 = num_battalions_with_type@logistics_helicopter }

	multiply_variable = { battalion_tier_4 = 0.1 }

	set_variable = { battalion_tier_5 = num_battalions_with_type@attack_helicopter_support }
	add_to_variable = { battalion_tier_5 = num_battalions_with_type@rocket_sp_artillery }
	add_to_variable = { battalion_tier_5 = num_battalions_with_type@heavy_armor }
	add_to_variable = { battalion_tier_5 = num_battalions_with_type@super_heavy_armor }
	add_to_variable = { battalion_tier_5 = num_battalions_with_type@armored_engineers }
	add_to_variable = { battalion_tier_5 = num_battalions_with_type@helicopter_medical_support }

	multiply_variable = { battalion_tier_5 = 0.15 }

	set_variable = { mil_expend = 0 }
	add_to_variable = { mil_expend = battalion_tier_1 }
	add_to_variable = { mil_expend = battalion_tier_2 }
	add_to_variable = { mil_expend = battalion_tier_3 }
	add_to_variable = { mil_expend = battalion_tier_4 }
	add_to_variable = { mil_expend = battalion_tier_5 }


	if = {
		limit = {
			has_idea = policy_military_temp_0
		}
		multiply_variable = { mil_expend = 0.1 }
	}
	if = {
		limit = {
			has_idea = policy_military_temp_1
		}
		multiply_variable = { mil_expend = 0.5 }
	}
	if = {
		limit = {
			has_idea = policy_military_temp_2
		}
		multiply_variable = { mil_expend = 1.0 }
	}
	if = {
		limit = {
			has_idea = policy_military_temp_3
		}
		multiply_variable = { mil_expend = 1.5 }
	}
	if = {
		limit = {
			has_idea = policy_military_temp_4
		}
		multiply_variable = { mil_expend = 2.2 }
	}
	if = {
		limit = {
			has_idea = policy_military_temp_5
		}
		multiply_variable = { mil_expend = 3.5 }
	}
	multiply_variable = { mil_expend = 0.4 } #COST DIVIDER
	set_variable = { mil_expend_subsidy = mil_expend }
	multiply_variable = { mil_expend_subsidy = 0.25 }
	set_variable = { mil_expend_subsidy_tot = 0 }
	every_country = {
		limit = {
			is_in_array = {
				array = ROOT.military_subsidies
				value = PREV
			}
		}
		meta_effect = {
			text = {
				add_to_variable = { mil_expend_subsidy_tot = [ROOTTAG].mil_expend_subsidy }
			
			}
			ROOTTAG = "[?var:mil_subsidy_id.GetTag]"
		}	
		subtract_from_variable = { mil_expend = mil_expend_subsidy }
		for_loop_effect = {
			end = influence_array^num
			value = v
			if = {
				limit = {
					check_variable = { influence_array^v = mil_subsidy_id }
				}
				add_to_variable = { influence_array_val^v = mil_expend_subsidy }
				set_country_flag = found
			}
		}
		recalculate_influence = yes	
	}
	add_to_variable = { mil_expend = mil_expend_subsidy_tot }
	set_variable = { mil_expend_cor_penalty = mil_expend }
	multiply_variable = { mil_expend_cor_penalty = CorruptPolicyExcess }
	
	add_to_variable = { mil_expend = mil_expend_cor_penalty }
	set_variable = { mil_expend_display = mil_expend }
	subtract_from_variable = { IncomeCheck = mil_expend }
	}
welfare_expenditure = {
	add_to_variable = { IncomeCheck = welfare_cost }
	set_variable = { welfare_cost = 0 }
	every_owned_state = {
		add_to_variable = { ROOT.welfare_cost = state_population_k }
	}
	multiply_variable = { ROOT.welfare_cost = 0.001 }
	if = {
		limit = {
			has_idea = policy_welfare_temp_0
		}
		multiply_variable = { welfare_cost = 0.01 }
	}
	if = {
		limit = {
			has_idea = policy_welfare_temp_1
		}
		multiply_variable = { welfare_cost = 0.4 }
	}
	if = {
		limit = {
			has_idea = policy_welfare_temp_2
		}
		multiply_variable = { welfare_cost = 1.0 }
	}
	if = {
		limit = {
			has_idea = policy_welfare_temp_3
		}
		multiply_variable = { welfare_cost = 2.4 }
	}
	if = {
		limit = {
			has_idea = policy_welfare_temp_4
		}
		multiply_variable = { welfare_cost = 4 }
	}
	if = {
		limit = {
			has_idea = policy_welfare_temp_5
		}
		multiply_variable = { welfare_cost = 6 }
	}
	multiply_variable = { welfare_cost = 0.4 } #COST DIVIDER
	set_variable = { welfare_cost_cor_penalty = welfare_cost }
	multiply_variable = { welfare_cost_cor_penalty = CorruptPolicyExcess }
	
	add_to_variable = { welfare_cost = welfare_cost_cor_penalty }
	set_variable = { welfare_cost_display = welfare_cost }
	subtract_from_variable = { IncomeCheck = welfare_cost }
}
cpi_expenditure = {
	add_to_variable = { IncomeCheck = cpi_cost }
	set_variable = { cpi_cost = 0 }
	every_owned_state = {
		add_to_variable = { ROOT.cpi_cost = state_population_k }
	}
	multiply_variable = { ROOT.cpi_cost = 0.001 }
	if = {
		limit = {
			has_idea = policy_cpi_temp_0
		}
		multiply_variable = { cpi_cost = 0.01 }
	}
	if = {
		limit = {
			has_idea = policy_cpi_temp_1
		}
		multiply_variable = { cpi_cost = 0.5 }
	}
	if = {
		limit = {
			has_idea = policy_cpi_temp_2
		}
		multiply_variable = { cpi_cost = 1.0 }
	}
	if = {
		limit = {
			has_idea = policy_cpi_temp_3
		}
		multiply_variable = { cpi_cost = 1.5 }
	}
	if = {
		limit = {
			has_idea = policy_cpi_temp_4
		}
		multiply_variable = { cpi_cost = 2.5 }
	}
	if = {
		limit = {
			has_idea = policy_cpi_temp_5
		}
		multiply_variable = { cpi_cost = 3.5 }
	}
	multiply_variable = { cpi_cost = 0.4 } #COST DIVIDER
	if = {
		limit = {
			has_country_flag = CPI_Discount
		}
		multiply_variable = { cpi_cost = 0.75 }
	}	
	
	set_variable = { cpi_cost_cor_penalty = cpi_cost }
	multiply_variable = { cpi_cost_cor_penalty = CorruptPolicyExcess }
	
	add_to_variable = { cpi_cost = cpi_cost_cor_penalty }
	set_variable = { cpi_cost_display = cpi_cost }
	subtract_from_variable = { IncomeCheck = cpi_cost }
}
edu_expenditure = {
	add_to_variable = { IncomeCheck = edu_cost }
	set_variable = { edu_cost = 0 }
	every_owned_state = {
		add_to_variable = { ROOT.edu_cost = state_population_k }
	}
	multiply_variable = { ROOT.edu_cost = 0.001 }
	if = {
		limit = {
			has_idea = policy_education_temp_0
		}
		multiply_variable = { edu_cost = 0.01 }
	}
	if = {
		limit = {
			has_idea = policy_education_temp_1
		}
		multiply_variable = { edu_cost = 1 }
	}
	if = {
		limit = {
			has_idea = policy_education_temp_2
		}
		multiply_variable = { edu_cost = 2 }
	}
	if = {
		limit = {
			has_idea = policy_education_temp_3
		}
		multiply_variable = { edu_cost = 4 }
	}
	if = {
		limit = {
			has_idea = policy_education_temp_4
		}
		multiply_variable = { edu_cost = 6 }
	}
	multiply_variable = { edu_cost = 0.4 } #COST DIVIDER
	set_variable = { edu_cost_cor_penalty = edu_cost }
	multiply_variable = { edu_cost_cor_penalty = CorruptPolicyExcess }
	
	add_to_variable = { edu_cost = edu_cost_cor_penalty }
	set_variable = { edu_cost_display = edu_cost }
	subtract_from_variable = { IncomeCheck = edu_cost }
}
health_expenditure = {
	add_to_variable = { IncomeCheck = health_cost }
	set_variable = { health_cost = 0 }
	every_owned_state = {
		add_to_variable = { ROOT.health_cost = state_population_k }
	}
	multiply_variable = { ROOT.health_cost = 0.001 }
	if = {
		limit = {
			has_idea = policy_healthcare_temp_0
		}
		multiply_variable = { health_cost = 0.01 }
	}
	if = {
		limit = {
			has_idea = policy_healthcare_temp_1
		}
		multiply_variable = { health_cost = 0.7 }
	}
	if = {
		limit = {
			has_idea = policy_healthcare_temp_2
		}
		multiply_variable = { health_cost = 1.6 }
	}
	if = {
		limit = {
			has_idea = policy_healthcare_temp_3
		}
		multiply_variable = { health_cost = 2.8 }
	}
	if = {
		limit = {
			has_idea = policy_healthcare_temp_4
		}
		multiply_variable = { health_cost = 4.6 }
	}
	if = {
		limit = {
			has_idea = policy_healthcare_temp_5
		}
		multiply_variable = { health_cost = 6 }
	}
	multiply_variable = { health_cost = 0.4 } #COST DIVIDER
	set_variable = { health_cost_cor_penalty = health_cost }
	multiply_variable = { health_cost_cor_penalty = CorruptPolicyExcess }
	
	add_to_variable = { health_cost = health_cost_cor_penalty }
	set_variable = { health_cost_display = health_cost }
	subtract_from_variable = { IncomeCheck = health_cost }
}
public_expenditure = {
	add_to_variable = { IncomeCheck = pub_cost }
	set_variable = { pub_cost = 0 }
	every_owned_state = {
		add_to_variable = { ROOT.pub_cost = state_population_k }
	}
	multiply_variable = { ROOT.pub_cost = 0.001 }
	if = {
		limit = {
			has_idea = policy_services_temp_0
		}
		multiply_variable = { pub_cost = 0.01 }
	}
	if = {
		limit = {
			has_idea = policy_services_temp_1
		}
		multiply_variable = { pub_cost = 0.8 }
	}
	if = {
		limit = {
			has_idea = policy_services_temp_2
		}
		multiply_variable = { pub_cost = 1.6 }
	}
	if = {
		limit = {
			has_idea = policy_services_temp_3
		}
		multiply_variable = { pub_cost = 2.6 }
	}
	multiply_variable = { pub_cost = 0.4 } #COST DIVIDER
	set_variable = { pub_cost_cor_penalty = pub_cost }
	multiply_variable = { pub_cost_cor_penalty = CorruptPolicyExcess }
		
	add_to_variable = { pub_cost = pub_cost_cor_penalty }
	set_variable = { pub_cost_display = pub_cost }
	subtract_from_variable = { IncomeCheck = pub_cost }
}
gdp_calculation = {

	every_owned_state = {
		add_to_variable = { ROOT.industrial_complex_totalGDP = building_level@industrial_complex }  
		add_to_variable = { ROOT.farm_totalGDP = building_level@agri_industrial_complex }
		add_to_variable = { ROOT.dockyard_totalGDP = building_level@dockyard }
		add_to_variable = { ROOT.oil_refinery_totalGDP = building_level@synthetic_refinery }
		add_to_variable = { ROOT.steel_works_totalGDP = building_level@steel_factory }
		add_to_variable = { ROOT.tungsten_factory_totalGDP = building_level@tungsten_factory }
		
		add_to_variable = { ROOT.office_park_totalGDP = building_level@office_park }	#+2
	}
	
	#industrial_complex Modifiers
	multiply_variable = { industrial_complex_totalGDP = 0.9 } #DIVIDER
	set_variable = { industrial_complex_tech = 1 }
	if = {
		limit = {
			has_tech = production_efficiency_I
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_II
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_III
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_IV
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_V
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_VI
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_VII
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_VIII
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_IX
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	production_efficiency_X
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	industrial_robots_I
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	industrial_robots_II
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	industrial_robots_III
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	industrial_robots_IV
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	industrial_robots_V
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	factory_automation_I
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	factory_automation_II
		}
		add_to_variable = { industrial_complex_tech = 0.05 }
	}
	multiply_variable = { industrial_complex_totalGDP = industrial_complex_tech }
	add_to_variable = { IncometotalGDP = industrial_complex_totalGDP }
	#agri_industrial_complex
	multiply_variable = { farm_totalGDP = 0.9 } #DIVIDER
	set_variable = { farm_tech = 1 }
	if = {
		limit = {
			has_tech = 	agriculture_I
		}
		add_to_variable = { farm_tech = 0.15 }
	}

	if = {
		limit = {
			has_tech = 	agriculture_I
		}
		add_to_variable = { farm_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	agriculture_II
		}
		add_to_variable = { farm_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	agriculture_III
		}
		add_to_variable = { farm_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	agriculture_IV
		}
		add_to_variable = { farm_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	agriculture_V
		}
		add_to_variable = { farm_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	agriculture_VI
		}
		add_to_variable = { farm_tech = 0.15 }
	}
	multiply_variable = { farm_totalGDP = farm_tech }
	add_to_variable = { IncometotalGDP = farm_totalGDP }
	#dockyard
	multiply_variable = { dockyard_totalGDP = 0.9 } #DIVIDER
	set_variable = { dockyard_tech = 1 }
	if = {
		limit = {
			has_tech = 	logistics_I
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_II
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_III
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_IV_A
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_IV_B
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_XII
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_V_A
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_V_B
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_VI
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_VII_A
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_VII_B
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_VIII_A
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_VIII_B
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}	
	if = {
		limit = {
			has_tech = 	logistics_IX
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_X
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	if = {
		limit = {
			has_tech = 	logistics_XII
		}
		add_to_variable = { dockyard_tech = 0.05 }
	}
	multiply_variable = { dockyard_totalGDP = dockyard_tech }
	add_to_variable = { IncometotalGDP = dockyard_totalGDP }
	#synthetic_refinery +15%
	multiply_variable = { oil_refinery_totalGDP = 0.9 } #DIVIDER
	set_variable = { oil_refinery_tech = 1 }
	if = {
		limit = {
			has_tech = 	ww_oil
		}
		add_to_variable = { oil_refinery_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	plastics_I
		}
		add_to_variable = { oil_refinery_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	plastics_II
		}
		add_to_variable = { oil_refinery_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	plastics_III
		}
		add_to_variable = { oil_refinery_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	plastics_IV
		}
		add_to_variable = { oil_refinery_tech = 0.15 }
	}	
	if = {
		limit = {
			has_tech = 	plastics_V
		}
		add_to_variable = { oil_refinery_tech = 0.15 }
	}
	multiply_variable = { oil_refinery_totalGDP = oil_refinery_tech }
	add_to_variable = { IncometotalGDP = oil_refinery_totalGDP }
	
	#steel_factory +15%			steel_works_totalGDP
	multiply_variable = { steel_works_totalGDP = 0.9 } #DIVIDER
	set_variable = { steel_works_tech = 1 }
	if = {
		limit = {
			has_tech = 	materials_I
		}
		add_to_variable = { steel_works_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	materials_II
		}
		add_to_variable = { steel_works_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	materials_III
		}
		add_to_variable = { steel_works_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	materials_IV
		}
		add_to_variable = { steel_works_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	materials_V
		}
		add_to_variable = { steel_works_tech = 0.15 }
	}	
	if = {
		limit = {
			has_tech = 	materials_VI
		}
		add_to_variable = { steel_works_tech = 0.15 }
	}
	multiply_variable = { steel_works_totalGDP = steel_works_tech }
	add_to_variable = { IncometotalGDP = steel_works_totalGDP }

	#tungsten_factory +15%		tungsten_factory_totalGDP
	multiply_variable = { tungsten_factory_totalGDP = 0.9 } #DIVIDER
	set_variable = { tungsten_factory_tech = 1 }
	if = {
		limit = {
			has_tech = 	chemistry_I
		}
		add_to_variable = { tungsten_factory_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	chemistry_II
		}
		add_to_variable = { tungsten_factory_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	chemistry_III
		}
		add_to_variable = { tungsten_factory_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	chemistry_IV
		}
		add_to_variable = { tungsten_factory_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	chemistry_V
		}
		add_to_variable = { tungsten_factory_tech = 0.15 }
	}	
	if = {
		limit = {
			has_tech = 	chemistry_VI
		}
		add_to_variable = { tungsten_factory_tech = 0.15 }
	}
	multiply_variable = { tungsten_factory_totalGDP = tungsten_factory_tech }
	add_to_variable = { IncometotalGDP = tungsten_factory_totalGDP }

	#office_park x2 +15%		office_park_totalGDP
	multiply_variable = { office_park_totalGDP = 3 }
	multiply_variable = { office_park_totalGDP = 0.9 } #DIVIDER
	set_variable = { office_park_tech = 1 }
	if = {
		limit = {
			has_tech = 	consumer_electronics_I
		}
		add_to_variable = { office_park_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	consumer_electronics_II
		}
		add_to_variable = { office_park_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	consumer_electronics_III
		}
		add_to_variable = { office_park_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	consumer_electronics_IV
		}
		add_to_variable = { office_park_tech = 0.15 }
	}
	if = {
		limit = {
			has_tech = 	consumer_electronics_V
		}
		add_to_variable = { office_park_tech = 0.15 }
	}	
	if = {
		limit = {
			has_tech = 	consumer_electronics_VI
		}
		add_to_variable = { office_park_tech = 0.15 }
	}
	multiply_variable = { office_park_totalGDP = office_park_tech }
	add_to_variable = { IncometotalGDP = office_park_totalGDP }
	
	set_variable = { cgBase = modifier@consumer_goods_factor  } 
	set_variable = { peBase = modifier@production_factory_max_efficiency_factor } 
	add_to_variable = { peBase = 1 } 
	divide_variable = { cgBase = peBase } 
	multiply_variable = { IncometotalGDP = cgBase }
	#multiply_variable = { IncometotalGDP = 2 }
	set_variable = { grossdomesticproduct = IncometotalGDP } 
	
	set_variable = { IncometotalGDP = 0 }
	set_variable = { ROOT.industrial_complex_totalGDP = 0 }  
	set_variable = { ROOT.farm_totalGDP = 0 }
	set_variable = { ROOT.dockyard_totalGDP = 0 }
	set_variable = { ROOT.oil_refinery_totalGDP = 0 }
	set_variable = { ROOT.steel_works_totalGDP = 0 }
	set_variable = { ROOT.tungsten_factory_totalGDP = 0 }
	set_variable = { ROOT.office_park_totalGDP = 0 }
}
tax_rate = {
	subtract_from_variable = { IncomeCheck = tax_base }
	set_variable = { tax_base = 0 }
	every_owned_state = {
		add_to_variable = { ROOT.tax_base = state_population_k }
	}
	multiply_variable = { ROOT.tax_base = 0.002 }
	if = {
		limit = {
			has_idea = 	Austrian_Taxation
		}
		multiply_variable = { tax_base = 0.01 }
	}
	if = {
		limit = {
			has_idea = 	Light_Taxation
		}
		multiply_variable = { tax_base = 0.10 }
	}
	if = {
		limit = {
			has_idea = 	Moderate_Taxation
		}
		multiply_variable = { tax_base = 0.25 }
	}
	if = {
		limit = {
			has_idea = 	Progressive_Taxation
		}
		multiply_variable = { tax_base = 0.35 }
	}
	if = {
		limit = {
			has_idea = 	Heavy_Taxation
		}
		multiply_variable = { tax_base = 0.45 }
	}	
	if = {
		limit = {
			has_idea = 	Marxist_Taxation
		}
		multiply_variable = { tax_base = 0.55 }
	}
	set_variable = { tax_display = 0 }
	set_variable = { tax_display = tax_base }
	add_to_variable = { IncomeCheck = tax_base }
}
edict_expenditure = {
}


